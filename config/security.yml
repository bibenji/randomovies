# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Randomovies\Entity\User:
            algorithm: bcrypt

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        chain_provider:
            chain:
                providers: user_db
        user_db:
            entity:
                class: Randomovies:User

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        admin_login:
#            anonymous: ~
#            form_login:
#                login_path: login
#                check_path: login
#            logout:
#                path: /logout
#                target: /
#            provider: in_memory

#        user_login:
#            anonymous: ~
#            form_login:
#                login_path: user-login
#                check_path: user-login
#            logout:
#                path: /logout
#                target: /
#            http_basic: ~
#            provider: user_db

        
#        admin:
#            pattern: ^/admin
#            form_login:
#                login_path: login
#                check_path: login
#            logout:
#                path: /logout
#                target: /
#            provider: in_memory

#        user:
#            pattern: ^/user
#            form_login:
#                login_path: user-login
#                check_path: user-login
#            logout:
#                path: /logout
#                target: /
#            http_basic: ~
#            provider: user_db

        main:
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
            logout:
                path: /logout
                target: /
#            provider: user_db
    
    role_hierarchy:
        ROLE_USER: ~
        ROLE_MOVIE_CREATE: ~
        ROLE_MOVIE_EDIT: ~
        ROLE_MOVIE_DELETE: ~
        ROLE_MOVIE_FULL:
            - ROLE_MOVIE_CREATE
            - ROLE_MOVIE_EDIT
            - ROLE_MOVIE_DELETE
        ROLE_PERSON_CREATE: ~
        ROLE_PERSON_EDIT: ~
        ROLE_PERSON_DELETE: ~
        ROLE_PERSON_FULL:
            - ROLE_PERSON_CREATE
            - ROLE_PERSON_EDIT
            - ROLE_PERSON_DELETE
        ROLE_TAG_CREATE: ~
        ROLE_TAG_EDIT: ~
        ROLE_TAG_DELETE: ~
        ROLE_TAG_FULL:
            - ROLE_TAG_CREATE
            - ROLE_TAG_EDIT
            - ROLE_TAG_DELETE
        ROLE_USER_CREATE: ~
        ROLE_USER_EDIT: ~
        ROLE_USER_DELETE: ~
        ROLE_USER_FULL:
            - ROLE_USER_CREATE
            - ROLE_USER_EDIT
            - ROLE_USER_DELETE
        ROLE_COMMENT_CREATE: ~
        ROLE_COMMENT_EDIT: ~
        ROLE_COMMENT_DELETE: ~
        ROLE_COMMENT_FULL:
            - ROLE_COMMENT_CREATE
            - ROLE_COMMENT_EDIT
            - ROLE_COMMENT_DELETE
        ROLE_CONTRIBUTOR:
            - ROLE_USER
            - ROLE_MOVIE_FULL           
            - ROLE_PERSON_FULL           
            - ROLE_TAG_FULL           
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_MOVIE_FULL
            - ROLE_PERSON_FULL            
            - ROLE_TAG_FULL
            - ROLE_USER_FULL
            - ROLE_COMMENT_FULL            
        
    access_control:
        - { path: ^/user, roles: [ ROLE_USER, ROLE_ADMIN ] }
        - { path: ^/admin, roles: ROLE_ADMIN }
